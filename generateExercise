#!/bin/bash

make > /dev/null

binDir=./bin

clefArg="$1"
seedArg="$2"

function syntax() {
  echo "Syntax: $0 [bass|treble] [id]"
  echo "Optional arguments:"
  echo "  The first argument defines the key (treble is the default)"
  echo "  Second argument [id] is used to reproduce an exercise and its solutions"
}

# Clef argument
[ "$clefArg" == "" ] && clefArg="treble"
if [ "$clefArg" == "--help" ] ; then
  syntax
  exit 0
elif [ "$clefArg" == "treble" ] ; then
  realNotes="notes_treble"
  fakeNotes="fake_treble"
  clef="treble"
elif [ "$clefArg" == "bass" ] ; then
  realNotes="notes_bass"
  fakeNotes="fake_bass"
  clef="bass"
else
  echo "Unknown clef: '$clefArg'"
  syntax
  exit -1
fi

# Seed (key or id) argument
if [ "$seedArg" == "" ] ; then
  seed=`date +%s%N`
  text_seed=`${binDir}/timeToKey encode $seed`
else
  text_seed="$seedArg"
fi


num_seed=`${binDir}/timeToKey decode $text_seed`
test_ly_name="test_$text_seed.ly"
solution_ly_name="solution_$text_seed.ly"
test_pdfName="exercise"
solution_pdfName="solution"
all_pdfName="exercise_solution"

notesPerLine=16
numberOfLines=13
numeroNote=$((notesPerLine*numberOfLines))

cat > $test_ly_name << @EOF
% Default layout:
\version "2.20.0"

\header {
  tagline = "Exercise $text_seed"
}

\layout {
  indent = #0
  line-width = #180 % #150
  #(layout-set-staff-size __STAFF_SIZE__)
}

\paper {
  bottom-margin = 1\cm
}

<<
  \new Staff \with { \omit TimeSignature } \new Voice = melody {
    \clef "$clef"
    \hide KeySignature
    \hide Stem
    \time ${notesPerLine}/4
@EOF

cp $test_ly_name $solution_ly_name
sed -e "s/Exercise/Solution to exercise/g" -i $solution_ly_name

# Setting staff size
sed -e "s/__STAFF_SIZE__/26/g" -i $test_ly_name
sed -e "s/__STAFF_SIZE__/18/g" -i $solution_ly_name

cat >> $test_ly_name << @EOF
    \hide NoteHead
@EOF

# Exercise needs aways the same note, so we generate fake ones
${binDir}/generaNote $numeroNote $num_seed 2 $fakeNotes $notesPerLine >> $test_ly_name

# Solution here
${binDir}/generaNote $numeroNote $num_seed 2 $realNotes $notesPerLine >> $solution_ly_name

testo=`${binDir}/generaNote $numeroNote $num_seed 2 name 0`

cat >> $test_ly_name << @EOF
  }
  \new Lyrics \lyricsto melody {
  \override LyricText.font-name = #"Source Serif Pro"
%  \override LyricText.font-name = #"Equity Text A"
%  \override LyricText.font-name = #"Sunday Comics BB"
  \override LyricText.font-size = #-2 
$testo }
>>
@EOF

cat >> $solution_ly_name << @EOF
  }
>>
@EOF

lilypond -o "$test_pdfName" "$test_ly_name" 2> /dev/null
lilypond -o "$solution_pdfName" "$solution_ly_name" 2> /dev/null
rm -f "$test_ly_name" "$solution_ly_name"

which evince > /dev/null && evince "$test_pdfName.pdf" "$solution_pdfName.pdf" &
# pdftk "$test_pdfName.pdf" "$solution_pdfName.pdf" cat output "$all_pdfName.pdf"
# rm -f "$test_pdfName.pdf" "$solution_pdfName.pdf"
# evince "$all_pdfName.pdf"

